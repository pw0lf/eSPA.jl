var documenterSearchIndex = {"docs":
[{"location":"#eSPA","page":"Home","title":"eSPA","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for eSPA.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#eSPA.eSPA","page":"Home","title":"eSPA.eSPA","text":"eSPA.jl\n\nImplementations of eSPA, eSPA+ and GOAl.\n\nExports:\n\neSPAdiscrete\neSPAfuzzy\neSPAplus\nGOAL\neSPAhybrid\nfit!\npredict\n\n\n\n\n\n","category":"module"},{"location":"#eSPA.GOAL","page":"Home","title":"eSPA.GOAL","text":"GOAL(K::Int, eps_CL::Float64, G::Int, tol::Float64, max_iter::Int)\n\nImplementation of GOAL [Vecchi+2024]\n\nFields\n\nK::Int: Number of Clusters\neps_CL::Float64: Hyperparameter for the classifyer loss\nG::Int: Dimension of Gauge\ntol::Float64: Break-condition for optimizaiton\nmax_iter::Int: Maximum number of optimization iterations\n\n\n\n\n\n","category":"type"},{"location":"#eSPA.eSPAdiscrete","page":"Home","title":"eSPA.eSPAdiscrete","text":"eSPAdiscrete(K::Int, eps_CL::Float64, eps_E::Float64, tol::Float64, max_iter::Int)\n\nDiscrete version of eSPA [Horenko2020]\n\nFields\n\nK::Int: Number of Clusters\neps_CL::Float64: Hyperparameter for the classifyer loss\neps_E::Float64: Hyperparameter for the feature selection loss\ntol::Float64: Break-condition for optimizaiton\nmax_iter::Int: Maximum number of optimization iterations\n\n\n\n\n\n","category":"type"},{"location":"#eSPA.eSPAfuzzy","page":"Home","title":"eSPA.eSPAfuzzy","text":"eSPAfuzzy(K::Int, eps_CL::Float64, eps_E::Float64, tol::Float64)\n\nFuzzy version of eSPA [Horenko2020]\n\nFields\n\nK::Int: Number of Clusters\neps_CL::Float64: Hyperparameter for the classifyer loss\neps_E::Float64: Hyperparameter for the feature selection loss\ntol::Float64: Break-condition for optimizaiton\n\n\n\n\n\n","category":"type"},{"location":"#eSPA.eSPAhybrid","page":"Home","title":"eSPA.eSPAhybrid","text":"eSPAhybrid(K::Int, eps_CL::Float64, eps_E::Float64, tol::Float64)\n\nFields\n\nK::Int: Number of Clusters\neps_CL::Float64: Hyperparameter for the classifyer loss\neps_E::Float64: Hyperparameter for the feature selection loss\ntol::Float64: Break-condition for discrete optimizaiton\nnum_fuzzy_steps::Int: NUmber of fuzzy steps after discrete steps are finished\n\n\n\n\n\n","category":"type"},{"location":"#eSPA.eSPAplus","page":"Home","title":"eSPA.eSPAplus","text":"eSPAplus(K::Int, eps_CL::Float64, eps_E::Float64, tol::Float64, max_iter::Int)\n\nImplementation of eSPA+ [Vecchi+2022]\n\nFields\n\nK::Int: Number of Clusters\neps_CL::Float64: Hyperparameter for the classifyer loss\neps_E::Float64: Hyperparameter for the feature selection loss\ntol::Float64: Break-condition for optimizaiton\nmax_iter::Int: Maximum number of optimization iterations\n\n\n\n\n\n","category":"type"},{"location":"#eSPA.fit!-Tuple{GOAL, AbstractMatrix, AbstractVector}","page":"Home","title":"eSPA.fit!","text":"fit!(model::GOAL, X::AbstractMatrix, y::AbstractVector)\n\nTrain GOAL with Data.\n\nArguments:\n\nmodel::GOAL: Model instance to train.\nX::AbstractMatrix: Data matrix which includes the features. Rows contain the features, Columns the data point.\ny::AbstractVector: Data labels. The labels should be Integers between 1 and M.\n\n\n\n\n\n","category":"method"},{"location":"#eSPA.fit!-Tuple{eSPAdiscrete, AbstractMatrix, AbstractVector}","page":"Home","title":"eSPA.fit!","text":"fit!(model::eSPAdiscrete, X::AbstractMatrix, y::AbstractVector)\n\nTrain eSPAdiscrete with Data.\n\nArguments:\n\nmodel::eSPAdiscrete: Model instance to train.\nX::AbstractMatrix: Data matrix which includes the features. Rows contain the features, Columns the data point.\ny::AbstractVector: Data labels. The labels should be Integers between 1 and M.\n\n\n\n\n\n","category":"method"},{"location":"#eSPA.fit!-Tuple{eSPAfuzzy, AbstractMatrix, AbstractVector}","page":"Home","title":"eSPA.fit!","text":"fit!(model::eSPAfuzzy, X::AbstractMatrix, y::AbstractVector)\n\nTrain eSPAfuzzy with Data.\n\nArguments:\n\nmodel::eSPAfuzzy: Model instance to train.\nX::AbstractMatrix: Data matrix which includes the features. Rows contain the features, Columns the data point.\ny::AbstractVector: Data labels. The labels should be Integers between 1 and M.\n\n\n\n\n\n","category":"method"},{"location":"#eSPA.fit!-Tuple{eSPAhybrid, AbstractMatrix, AbstractVector}","page":"Home","title":"eSPA.fit!","text":"fit!(model::eSPAhybrid, X::AbstractMatrix, y::AbstractVector)\n\nTrain eSPAhybrid with Data.\n\nArguments:\n\nmodel::eSPAhybrid: Model instance to train.\nX::AbstractMatrix: Data matrix which includes the features. Rows contain the features, Columns the data point.\ny::AbstractVector: Data labels. The labels should be Integers between 1 and M.\n\n\n\n\n\n","category":"method"},{"location":"#eSPA.fit!-Tuple{eSPAplus, AbstractMatrix, AbstractVector}","page":"Home","title":"eSPA.fit!","text":"fit!(model::eSPAplus, X::AbstractMatrix, y::AbstractVector)\n\nTrain eSPAplus with Data.\n\nArguments:\n\nmodel::eSPAplus: Model instance to train.\nX::AbstractMatrix: Data matrix which includes the features. Rows contain the features, Columns the data point.\ny::AbstractVector: Data labels. The labels should be Integers between 1 and M.\n\n\n\n\n\n","category":"method"},{"location":"#eSPA.predict-Tuple{GOAL, AbstractMatrix}","page":"Home","title":"eSPA.predict","text":"predict(model::GOAL, X::AbstractMatrix)\n\nCalculate predictions.\n\nArguments:\n\nmodel::GOAL: Trained instance of GOAL.\nX::AbstractMatrix: Data matrix which includes the features. Rows contain the features, Columns the data point.\n\n\n\n\n\n","category":"method"},{"location":"#eSPA.predict-Tuple{eSPAdiscrete, AbstractMatrix}","page":"Home","title":"eSPA.predict","text":"predict(model::eSPAdiscrete, X::AbstractMatrix)\n\nCalculate predictions.\n\nArguments:\n\nmodel::eSPAdiscrete: Trained instance of eSPAdiscrete.\nX::AbstractMatrix: Data matrix which includes the features. Rows contain the features, Columns the data point.\n\n\n\n\n\n","category":"method"},{"location":"#eSPA.predict-Tuple{eSPAfuzzy, AbstractMatrix}","page":"Home","title":"eSPA.predict","text":"predict(model::eSPAfuzzy, X::AbstractMatrix)\n\nCalculate predictions.\n\nArguments:\n\nmodel::eSPAfuzzy: Trained instance of eSPAfuzzy.\nX::AbstractMatrix: Data matrix which includes the features. Rows contain the features, Columns the data point.\n\n\n\n\n\n","category":"method"},{"location":"#eSPA.predict-Tuple{eSPAhybrid, AbstractMatrix}","page":"Home","title":"eSPA.predict","text":"predict(model::eSPAhybrid, X::AbstractMatrix)\n\nCalculate predictions.\n\nArguments:\n\nmodel::eSPAhybrid: Trained instance of eSPAhybrid.\nX::AbstractMatrix: Data matrix which includes the features. Rows contain the features, Columns the data point.\n\n\n\n\n\n","category":"method"},{"location":"#eSPA.predict-Tuple{eSPAplus, AbstractMatrix}","page":"Home","title":"eSPA.predict","text":"predict(model::eSPAplus, X::AbstractMatrix)\n\nCalculate predictions.\n\nArguments:\n\nmodel::eSPAplus: Trained instance of eSPAplus.\nX::AbstractMatrix: Data matrix which includes the features. Rows contain the features, Columns the data point.\n\n\n\n\n\n","category":"method"}]
}
